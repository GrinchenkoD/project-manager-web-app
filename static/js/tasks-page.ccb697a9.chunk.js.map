{"version":3,"sources":["components/formControl/FormControl.jsx","components/ProjectForm/ProjectForm.module.css","redux/sprints/sprint-operation.js","redux/projects/project-selectors.js","components/TemporaryModal/TemporaryModal.jsx","components/TemporaryModal/TemporaryMdal.module.css","components/TemporaryModal/transitions/modalOverlayTransition.module.css","components/TemporaryModal/transitions/modalFormTransition.module.css","components/formControl/FormControl.module.css","redux/sprints/sprint-selectors.js","components/SprintForm/sprintSchema.js","components/SprintForm/SprintForm.jsx","pages/TasksPage/TasksPage.module.css","pages/TasksPageItem/TasksPageItem.module.css","components/Chart/analytics.module.css","components/ChartModal/ChartModal.module.css","pages/TasksPage/alert.module.css","components/TaskForm/taskSchema.js","redux/tasks/task-operation.js","components/TaskForm/TaskForm.jsx","icons/Buttons/addBtn.png","icons/Buttons/analytics.png","icons/Buttons/sprintBox.png","pages/TasksPageItem/TasksPageItem.jsx","redux/tasks/task-selectors.js","components/Chart/data.js","components/Chart/Chart.js","components/ChartModal/ChartModal.js","pages/TasksPage/TasksPage.jsx","redux/projects/project-operations.js","icons/symbol-defs.svg"],"names":["FormControl","label","className","props","useField","field","meta","styles","container","cn","formControlInput","isInvalid","error","touched","required","htmlFor","id","name","module","exports","token","axios","defaults","headers","common","Authorization","addSprint","projectId","sprint","dispatch","getState","a","addSprintRequest","accessToken","auth","post","data","addSprintSuccess","_id","addSprintError","message","response","status","logoutSuccess","refreshTemplate","getSprint","getSprintRequest","get","getSprintSuccess","sprints","getSprintError","patchTitle","sprintId","title","changeSprintTitleRequest","patch","changeSprintTitleSuccess","changeSprintTitleError","deleteSprint","deleteSprintRequest","delete","deleteSprintSuccess","deleteSprintError","projectsSelector","state","projects","projectsItems","projectsLoadingSelector","projectsLoading","TemporaryModal","onClose","onOpen","children","handleKey","useCallback","event","key","useEffect","window","addEventListener","removeEventListener","handleOverlay","target","currentTarget","createPortal","in","classNames","overlayTransition","timeout","unmountOnExit","stage","overlay","onClick","modalTransition","mountOnEnter","thumb","closeBtn","closeSvg","href","sprite","cancelBtn","document","getElementById","getSprints","sprintsItems","sprintsLoadingSelector","sprintsLoading","sprintsSchema","Yup","shape","duration","positive","SprintForm","useDispatch","useParams","useState","startDate","setStartDate","checkedBeforeDay","setcheckedBeforeDay","addNeWSprint","values","endDate","format","initialValues","validationSchema","onSubmit","type","placeholder","selected","onChange","date","placeholderText","autoComplete","dateFormat","toLocaleDateString","month","day","filterDate","getDay","locale","uk","minDate","Date","showDisabledMonthNavigation","btnThumb","acceptBtn","hoursPlanned","max","integer","addTask","task","addTaskRequest","addTaskSuccess","addTaskError","getTask","getTaskRequest","getTaskSuccess","getTaskError","deleteTask","deleteTaskRequest","deleteTaskSuccess","deleteTaskError","onAddTask","taskSchema","TaskPageItem","input","setInput","hoursWastedPerDay","find","item","currentDay","getDate","singleHoursWasted","tasksListItem","taskTitle","planned","plannedTitle","plannedHours","used","usedTitle","isDisabled","hoursWastedInput","zero","value","e","hours","Number","dataset","getFullYear","getMonth","toString","padStart","taskId","hoursWasted","addHoursWastedRequest","addHoursWastedSuccess","newWastedHours","addHoursWastedError","addHoursWasted","data-date","total","totalTitle","totalHours","btnCont","data-id","btnDelete","btnDeleteIcon","tasksSelector","tasks","tasksItems","tasksLoadingSelector","tasksLoading","sprintDurationSelector","length","hoursPlannedSelector","createSelector","items","map","reduce","acc","taskValue","chartDaysSelector","itemsSprintsSelector","sprintsSelector","findCurrentSprint","params","el","formatDateChanger","chartDays","newFormatDayMounth","formatDate","unshift","convertFormToUppercase","result","moment","returnDayFormat","split","firstLetterToUppercase","toUpperCase","splice","join","res","mounth","getRedLineArr","sprintDuration","sprintHoursPerDay","remainingHours","i","push","toFixed","getBlueLineArr","itemsArr","arrOftotalHoursPerDay","getSumArrOfHoursPerSingleDay","hoursPersingleDay","itemHoursPlanned","itemHoursWasted","corrHoursArrChecker","connect","ownProps","chartData","setChartData","chartOptions","layout","padding","left","right","top","bottom","responsive","display","text","fontColor","fontFamily","fontSize","elements","line","borderWidth","point","pointStyle","hoverRadius","hoverBackgroundColor","hoverBorderWidth","radius","hitRadius","tooltips","mode","titleFontSize","titleMarginBottom","bodyFontFamily","bodyFontSize","bodySpacing","bodyAlign","xPadding","yPadding","caretPadding","caretSize","cornerRadius","callbacks","tooltipItem","scales","yAxes","scaleLabel","labelString","ticks","beginAtZero","gridLines","xAxes","legend","fullWidth","labels","boxWidth","usePointStyle","datasets","fill","lineTension","borderColor","backgroundColor","graphicWrapper","options","Modal","handleKeyDown","code","console","log","changeScrollStyle","querySelector","style","overflow","modal","closeGraphicBtn","nodeName","TasksPage","modalOpen","setModalOpen","diagramModal","setDiagramModal","modalAddSprint","setModalAddSprint","useSelector","project","isUpdate","setUpdate","active","setActive","setValue","_MS_PER_DAY","curDay","now","setCurrentDay","sprintDay","setSprintDay","filtredTask","filter","includes","toLowerCase","getProject","onCloseModal","body","onCloseModalSprint","parse","Math","floor","tasksContainer","sprintsSideBar","showSprints","to","sprintsLink","activeClassName","sprintLinkActive","sprintsBackArrow","sprintsBack","sprintsBackText","sprintsListSection","sprintsList","sprintListItem","src","sprintBox","alt","sprintTitle","btnAddSprint","addBtn","btnAddSprintIcon","addSprintText","navigation","datePicker","navDay","navLeft","prev","disabled","navCurrentDay","navTotalDays","navRight","navDate","toJSON","slice","reverse","search","searchInput","searchMagnify","tasksTitle","CSSTransition","alert","preventDefault","changeForm","changeFormInput","saveButtonIcon","onExited","onEnter","tasksTitleText","tasksTitleEdit","btnEdit","tasksHeader","tasksHeaderTitle","tasksHeaderPlanned","tasksHeaderUsed","tasksHeaderTotal","tasksList","Loader","tasksNone","addTaskSection","btnAdd","btnAddIcon","addProjectText","TaskForm","showGraphSection","btnGraph","analytics","btnGraphIcon","ChartModal","addProject","addProjectRequest","addProjectSuccess","addProjectError","getProjectRequest","getProjectSuccess","getProjectError","addContributor","contributor","addContributorRequest","addContributorSuccess","members","newMembers","addContributorError","changeProjectTitleRequest","changeProjectTitleSuccess","changeProjectTitleError","deleteProject","deleteProjectRequest","deleteProjectSuccess","deleteProjectError"],"mappings":"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","file":"static/js/tasks-page.ccb697a9.chunk.js","sourcesContent":["import { ErrorMessage } from 'formik';\r\nimport React from 'react';\r\nimport { useField } from 'formik';\r\n\r\nimport styles from './FormControl.module.css';\r\nimport cn from 'classnames';\r\n//  const regExp = new RegExp(/^[a-zA-Zа-яА-ЯЁё\\s]+$/)\r\nconst FormControl = ({ label, className, ...props }) => {\r\n  const [field, meta] = useField(props);\r\n  return (\r\n    <div className={styles.container}>\r\n      {/* <TextInput {...props} /> */}\r\n      <input\r\n        className={cn(\r\n          `${styles.formControlInput}`,\r\n          {\r\n            isInvalid: meta.error && meta.touched,\r\n          },\r\n          className,\r\n        )}\r\n        {...props}\r\n        {...field}\r\n        // pattern={/^[a-zA-Zа-яА-ЯЁё\\s]+$/}\r\n        // pattern={/^([A-Za-z0-9_\\-\\.])$/}\r\n        // pattern={/^[a-zA-Z]+$/}\r\n        required\r\n      />\r\n      <label htmlFor={props.id} className={styles.label}>\r\n        {label}\r\n      </label>\r\n\r\n      <ErrorMessage name={props.name} className={styles.error} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FormControl;\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"acceptBtn\":\"ProjectForm_acceptBtn__2Cq4k\",\"btnThumb\":\"ProjectForm_btnThumb__2HDk1\"};","import axios from 'axios';\r\nimport { logoutSuccess } from 'redux/auth/auth-actions';\r\nimport { refreshTemplate } from 'redux/refreshToken/refreshTemplate';\r\nimport {\r\n  addSprintRequest,\r\n  addSprintSuccess,\r\n  addSprintError,\r\n  getSprintRequest,\r\n  getSprintSuccess,\r\n  getSprintError,\r\n  deleteSprintRequest,\r\n  deleteSprintSuccess,\r\n  deleteSprintError,\r\n  changeSprintTitleRequest,\r\n  changeSprintTitleSuccess,\r\n  changeSprintTitleError,\r\n} from './sprint-action';\r\n\r\n//  https://sbc-backend.goit.global\r\n// axios.defaults.baseURL = 'https://sbc-backend.goit.global';\r\n\r\n// ======= post project=======\r\n//     /project\r\n\r\nconst token = {\r\n  set(token) {\r\n    axios.defaults.headers.common.Authorization = `Bearer ${token}`;\r\n  },\r\n  unset() {\r\n    axios.defaults.headers.common.Authorization = '';\r\n  },\r\n};\r\n\r\nconst addSprint = (projectId, sprint) => async (dispatch, getState) => {\r\n  dispatch(addSprintRequest());\r\n  const {\r\n    auth: { token: accessToken },\r\n  } = getState();\r\n  token.set(accessToken);\r\n  try {\r\n    const { data } = await axios.post(`/sprint/${projectId}`, sprint);\r\n    const id = data.id;\r\n    delete data.id;\r\n    dispatch(addSprintSuccess({ ...data, _id: id }));\r\n  } catch (error) {\r\n    dispatch(addSprintError(error.message));\r\n    if (error.response?.status === 404) {\r\n      token.unset();\r\n      dispatch(logoutSuccess());\r\n      return;\r\n    }\r\n    refreshTemplate(() => addSprint(projectId, sprint), error, dispatch);\r\n  }\r\n};\r\n\r\nconst getSprint = projectId => async (dispatch, getState) => {\r\n  dispatch(getSprintRequest());\r\n  const {\r\n    auth: { token: accessToken },\r\n  } = getState();\r\n  token.set(accessToken);\r\n  try {\r\n    const { data } = await axios.get(`/sprint/${projectId}`);\r\n    dispatch(getSprintSuccess(data.sprints));\r\n  } catch (error) {\r\n    dispatch(getSprintError(error.message));\r\n    refreshTemplate(() => getSprint(projectId), error, dispatch);\r\n  }\r\n};\r\n\r\n// ======== patch title ==========\r\n\r\n// /sprint/title/{sprintId}\r\n\r\nconst patchTitle = (sprintId, title) => async (dispatch, getState) => {\r\n  dispatch(changeSprintTitleRequest());\r\n\r\n  try {\r\n    await axios.patch(`/sprint/title/${sprintId}`, { title });\r\n    dispatch(changeSprintTitleSuccess({ sprintId, title }));\r\n  } catch (error) {\r\n    dispatch(changeSprintTitleError(error.message));\r\n    refreshTemplate(() => patchTitle(sprintId, title), error, dispatch);\r\n  }\r\n};\r\n\r\n//========= delete sprint ==========\r\nconst deleteSprint = id => async dispatch => {\r\n  dispatch(deleteSprintRequest());\r\n  try {\r\n    await axios.delete(`/sprint/${id}`);\r\n    dispatch(deleteSprintSuccess(id));\r\n  } catch (error) {\r\n    dispatch(deleteSprintError(error.message));\r\n    refreshTemplate(() => deleteSprint(id), error, dispatch);\r\n  }\r\n};\r\n\r\nexport { addSprint, getSprint, deleteSprint, patchTitle };\r\n","const projectsSelector = state => state.projects.projectsItems;\r\nconst projectsErrorSelector = state => state.projects.projectsError;\r\nconst projectsLoadingSelector = state => state.projects.projectsLoading;\r\n\r\nexport { projectsSelector, projectsErrorSelector, projectsLoadingSelector };\r\n","import React, { useEffect, useCallback } from 'react';\r\nimport sprite from '../../icons/symbol-defs.svg';\r\nimport styles from './TemporaryMdal.module.css';\r\nimport { CSSTransition } from 'react-transition-group';\r\nimport overlayTransition from './transitions/modalOverlayTransition.module.css';\r\nimport modalTransition from './transitions/modalFormTransition.module.css';\r\nimport { createPortal } from 'react-dom';\r\n\r\nconst TemporaryModal = ({ onClose, onOpen, title, children }) => {\r\n  const handleKey = useCallback(\r\n    event => {\r\n      if (event.key === 'Escape') {\r\n        return onClose && onClose();\r\n      }\r\n    },\r\n    [onClose],\r\n  );\r\n\r\n  useEffect(() => {\r\n    window.addEventListener('keydown', handleKey);\r\n    return () => {\r\n      window.removeEventListener('keydown', handleKey);\r\n    };\r\n  }, [handleKey]);\r\n\r\n  const handleOverlay = useCallback(\r\n    ({ target, currentTarget }) => {\r\n      if (target === currentTarget) {\r\n        onClose && onClose();\r\n      }\r\n    },\r\n    [onClose],\r\n  );\r\n\r\n  return createPortal(\r\n    <CSSTransition\r\n      in={onOpen}\r\n      classNames={overlayTransition}\r\n      timeout={200}\r\n      unmountOnExit\r\n    >\r\n      {stage => (\r\n        <div className={styles.overlay} onClick={handleOverlay}>\r\n          <CSSTransition\r\n            in={stage === 'entered'}\r\n            timeout={250}\r\n            classNames={modalTransition}\r\n            mountOnEnter\r\n            unmountOnExit\r\n          >\r\n            <div className={styles.thumb}>\r\n              <button className={styles.closeBtn} onClick={onClose}>\r\n                <svg className={styles.closeSvg}>\r\n                  <use href={sprite + '#icon-close'} />\r\n                </svg>\r\n              </button>\r\n              <h3 className={styles.title}>{title}</h3>\r\n              {children}\r\n              <button className={styles.cancelBtn} onClick={onClose}>\r\n                Скасувати\r\n              </button>\r\n            </div>\r\n          </CSSTransition>\r\n        </div>\r\n      )}\r\n    </CSSTransition>,\r\n    document.getElementById('modalRoot'),\r\n  );\r\n};\r\n\r\nexport default TemporaryModal;\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"overlay\":\"TemporaryMdal_overlay__1UJQe\",\"thumb\":\"TemporaryMdal_thumb__eh8tC\",\"closeBtn\":\"TemporaryMdal_closeBtn__3lmvT\",\"closeSvg\":\"TemporaryMdal_closeSvg__ZSBsr\",\"title\":\"TemporaryMdal_title__15y1Y\",\"cancelBtn\":\"TemporaryMdal_cancelBtn__3eCB2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"modalOverlayTransition_enter__3DWEg\",\"enterActive\":\"modalOverlayTransition_enterActive__10zzt\",\"exit\":\"modalOverlayTransition_exit__3EmOr\",\"exitActive\":\"modalOverlayTransition_exitActive__2zoHG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"modalFormTransition_enter__3Uk9Q\",\"enterActive\":\"modalFormTransition_enterActive__1WvST\",\"exit\":\"modalFormTransition_exit__3OjKz\",\"exitActive\":\"modalFormTransition_exitActive__1VqZV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"FormControl_container__3Qu4e\",\"label\":\"FormControl_label__8jcFP\",\"formControlInput\":\"FormControl_formControlInput__1rv54\",\"error\":\"FormControl_error__ybgiX\"};","const getToken = state => state;\r\nconst getSprints = state => state.sprints.sprintsItems;\r\nconst sprintsErrorSelector = state => state.sprints.sprintsError;\r\nconst sprintsLoadingSelector = state => state.sprints.sprintsLoading;\r\n\r\nexport { getToken, getSprints, sprintsErrorSelector, sprintsLoadingSelector };\r\n","import * as Yup from 'yup';\r\n\r\nconst sprintsSchema = Yup.object().shape({\r\n  title: Yup.string().required('Обов`язкове поле'),\r\n  // endDate: Yup.string().required('Обов`язкове поле'),\r\n  // endDate: Yup.date().default(function () {\r\n  //   return new Date();\r\n  // }),\r\n  duration: Yup.number()\r\n    .positive()\r\n    // .integer('Введiть кiлькiсть годин')\r\n    .required('Обов`язкове поле'),\r\n});\r\n\r\nexport default sprintsSchema;\r\n","import React, { useCallback, useState } from 'react';\r\nimport { Form, Formik } from 'formik';\r\nimport { useDispatch } from 'react-redux';\r\nimport { useParams } from 'react-router-dom';\r\nimport { addSprint } from '../../redux/sprints/sprint-operation';\r\nimport sprintsSchema from './sprintSchema';\r\nimport FormControl from '../formControl/FormControl';\r\nimport styles from '../ProjectForm/ProjectForm.module.css';\r\nimport DatePicker from 'react-datepicker';\r\nimport 'react-datepicker/dist/react-datepicker.css';\r\nimport './picker.css';\r\nimport format from 'date-fns/format';\r\nimport { getDay } from 'date-fns';\r\nimport uk from 'date-fns/locale/uk';\r\n\r\nconst SprintForm = ({ onClose }) => {\r\n  const dispatch = useDispatch();\r\n  const { projectId } = useParams();\r\n  const [startDate, setStartDate] = useState(null);\r\n  const [checkedBeforeDay, setcheckedBeforeDay] = useState(false);\r\n\r\n  const options = {\r\n    month: 'long',\r\n    day: 'numeric',\r\n  };\r\n\r\n  const onChecked = () => {\r\n    setcheckedBeforeDay(!checkedBeforeDay);\r\n  };\r\n\r\n  const isWeekday = date => {\r\n    const day = getDay(date);\r\n    return day !== 0 && day !== 6;\r\n  };\r\n\r\n  const changeData = date => {\r\n    setStartDate(date);\r\n  };\r\n\r\n  const addNeWSprint = useCallback(\r\n    values => {\r\n      const data = { ...values, endDate: format(startDate, 'yyyy-M-d') };\r\n      dispatch(addSprint(projectId, data));\r\n      onClose();\r\n    },\r\n    [dispatch, projectId, onClose, startDate],\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <Formik\r\n        initialValues={{\r\n          title: '',\r\n          duration: '',\r\n        }}\r\n        validationSchema={sprintsSchema}\r\n        onSubmit={addNeWSprint}\r\n      >\r\n        <Form>\r\n          <FormControl\r\n            label=\"Назва спринта\"\r\n            name=\"title\"\r\n            type=\"text\"\r\n            id=\"title\"\r\n            placeholder=\"Назва спринта\"\r\n          />\r\n          <div className=\"div-datepicker\">\r\n            <input\r\n              type=\"checkbox\"\r\n              className=\"custom-checkbox\"\r\n              id=\"beforeDays\"\r\n              onClick={onChecked}\r\n            />\r\n            <label htmlFor=\"beforeDays\" className=\"label-checkbox\">\r\n              Попередні дні\r\n            </label>\r\n            <DatePicker\r\n              selected={startDate}\r\n              onChange={changeData}\r\n              placeholderText=\"Дата завершення\"\r\n              autoComplete=\"false\"\r\n              dateFormat={\r\n                startDate ? startDate.toLocaleDateString('ua', options) : ''\r\n              }\r\n              filterDate={isWeekday}\r\n              locale={uk}\r\n              minDate={!checkedBeforeDay ? new Date() : ''}\r\n              showDisabledMonthNavigation\r\n            />\r\n          </div>\r\n          <FormControl\r\n            label=\"Тривалість\"\r\n            name=\"duration\"\r\n            type=\"number\"\r\n            id=\"duration\"\r\n            placeholder=\"Тривалість\"\r\n          />\r\n          <div className={styles.btnThumb}>\r\n            <button\r\n              type=\"submit\"\r\n              // onSubmit={addNeWSprint}\r\n              className={styles.acceptBtn}\r\n            >\r\n              Готово\r\n            </button>\r\n          </div>\r\n        </Form>\r\n      </Formik>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SprintForm;\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tasksContainer\":\"TasksPage_tasksContainer__1SBdp\",\"showSprints\":\"TasksPage_showSprints__i0aOa\",\"container\":\"TasksPage_container__fQ3eA\",\"sprintsBackArrow\":\"TasksPage_sprintsBackArrow__2Txoa\",\"sprintsBackText\":\"TasksPage_sprintsBackText__3Qetp\",\"navigation\":\"TasksPage_navigation__3y1Yb\",\"navDay\":\"TasksPage_navDay__10ynC\",\"datePicker\":\"TasksPage_datePicker__2k6LT\",\"navLeft\":\"TasksPage_navLeft__ec5_M\",\"navRight\":\"TasksPage_navRight__2QgAy\",\"navCurrentDay\":\"TasksPage_navCurrentDay__3lxun\",\"navTotalDays\":\"TasksPage_navTotalDays__2ToKX\",\"search\":\"TasksPage_search__2lTSc\",\"searchInput\":\"TasksPage_searchInput__31bfv\",\"searchMagnify\":\"TasksPage_searchMagnify__3vjhR\",\"tasks\":\"TasksPage_tasks__2Jd4v\",\"tasksTitle\":\"TasksPage_tasksTitle__2pqj3\",\"tasksTitleText\":\"TasksPage_tasksTitleText__BHpRh\",\"tasksTitleEdit\":\"TasksPage_tasksTitleEdit__3XrZV\",\"btnEdit\":\"TasksPage_btnEdit__37bAI\",\"changeForm\":\"TasksPage_changeForm__jtSLb\",\"changeFormInput\":\"TasksPage_changeFormInput__2U66k\",\"saveButtonIcon\":\"TasksPage_saveButtonIcon__1xWEs\",\"tasksList\":\"TasksPage_tasksList__3_1NL\",\"btnAdd\":\"TasksPage_btnAdd__NrP91\",\"btnAddIcon\":\"TasksPage_btnAddIcon__3M2AL\",\"btnGraph\":\"TasksPage_btnGraph__AZaUb\",\"btnGraphIcon\":\"TasksPage_btnGraphIcon__dfIHT\",\"sprintsListSection\":\"TasksPage_sprintsListSection__2RHoq\",\"addProjectText\":\"TasksPage_addProjectText__1VtIh\",\"tasksHeader\":\"TasksPage_tasksHeader__HD9x8\",\"sprintsSideBar\":\"TasksPage_sprintsSideBar__3KIAq\",\"sprintsBack\":\"TasksPage_sprintsBack__cT34P\",\"sprintsList\":\"TasksPage_sprintsList__ui6HX\",\"sprintListItem\":\"TasksPage_sprintListItem__z3O7c\",\"sprintsLink\":\"TasksPage_sprintsLink___bDah\",\"sprintLinkActive\":\"TasksPage_sprintLinkActive__2Xlej TasksPage_sprintsLink___bDah\",\"sprintTitle\":\"TasksPage_sprintTitle__1mgb3\",\"sprintBox\":\"TasksPage_sprintBox__3Vz3G\",\"projectsBackText\":\"TasksPage_projectsBackText__3Yc7n\",\"addSprint\":\"TasksPage_addSprint__3hYXR\",\"btnAddSprint\":\"TasksPage_btnAddSprint__1KVKW\",\"btnAddSprintIcon\":\"TasksPage_btnAddSprintIcon__a1-c6\",\"addSprintText\":\"TasksPage_addSprintText__NEDF4\",\"showGraphSection\":\"TasksPage_showGraphSection__zN4bX\",\"addTaskSection\":\"TasksPage_addTaskSection__S04np\",\"tasksHeaderTitle\":\"TasksPage_tasksHeaderTitle__2w99B\",\"tasksHeaderPlanned\":\"TasksPage_tasksHeaderPlanned__2fT7y\",\"tasksHeaderUsed\":\"TasksPage_tasksHeaderUsed__2OF3U\",\"tasksHeaderTotal\":\"TasksPage_tasksHeaderTotal__38xe0\",\"tasksNone\":\"TasksPage_tasksNone__3LPA5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tasksListItem\":\"TasksPageItem_tasksListItem__3o_aP\",\"zero\":\"TasksPageItem_zero__2YTn4\",\"taskTitle\":\"TasksPageItem_taskTitle__3HDU1\",\"planned\":\"TasksPageItem_planned__13fgO\",\"used\":\"TasksPageItem_used__2QPet\",\"total\":\"TasksPageItem_total__IL2XP\",\"plannedTitle\":\"TasksPageItem_plannedTitle__1AGTM\",\"plannedHours\":\"TasksPageItem_plannedHours__3ypSA\",\"usedTitle\":\"TasksPageItem_usedTitle__2maF5\",\"usedHours\":\"TasksPageItem_usedHours__38IA8\",\"totalTitle\":\"TasksPageItem_totalTitle__31Xax\",\"totalHours\":\"TasksPageItem_totalHours__2Djlk\",\"btnCont\":\"TasksPageItem_btnCont__6quR2\",\"btnDelete\":\"TasksPageItem_btnDelete__cigY3\",\"btnDeleteIcon\":\"TasksPageItem_btnDeleteIcon__3evsX\",\"hoursWastedInput\":\"TasksPageItem_hoursWastedInput__Ebg-u\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"AnalyticBtn\":\"analytics_AnalyticBtn__2mqLN\",\"graphicWrapper\":\"analytics_graphicWrapper__2XSMS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"graphicWrapper\":\"ChartModal_graphicWrapper__3MXKG\",\"overlay\":\"ChartModal_overlay__1zRAG\",\"modal\":\"ChartModal_modal__3bjwc\",\"closeGraphicBtn\":\"ChartModal_closeGraphicBtn__1LU4G\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"alert_enter__xhyAV\",\"zoomIn\":\"alert_zoomIn__rZX97\",\"enterActive\":\"alert_enterActive__3BDs6\",\"exit\":\"alert_exit__1EUr5\",\"zoomOut\":\"alert_zoomOut__U4WaO\",\"exitActive\":\"alert_exitActive__2Cqan\"};","import * as Yup from 'yup';\r\n\r\nconst sprintsSchema = Yup.object().shape({\r\n  title: Yup.string().required('Обов`язкове поле'),\r\n  hoursPlanned: Yup.number()\r\n    .max(8, 'Неможливо запланувати бiльше 8 годин на задачу')\r\n    .positive()\r\n    .integer('Введiть кiлькiсть годин')\r\n    .required('Обов`язкове поле'),\r\n});\r\n\r\nexport default sprintsSchema;\r\n","import axios from 'axios';\r\nimport { refreshTemplate } from 'redux/refreshToken/refreshTemplate';\r\nimport {\r\n  addTaskRequest,\r\n  addTaskSuccess,\r\n  addTaskError,\r\n  getTaskRequest,\r\n  getTaskSuccess,\r\n  getTaskError,\r\n  deleteTaskRequest,\r\n  deleteTaskSuccess,\r\n  deleteTaskError,\r\n  addHoursWastedSuccess,\r\n  addHoursWastedRequest,\r\n  addHoursWastedError,\r\n} from './task-action';\r\n\r\n//  https://sbc-backend.goit.global\r\n// axios.defaults.baseURL = 'https://sbc-backend.goit.global';\r\n\r\n// ======= post task=======\r\n\r\nconst token = {\r\n  set(token) {\r\n    axios.defaults.headers.common.Authorization = `Bearer ${token}`;\r\n  },\r\n  unset() {\r\n    axios.defaults.headers.common.Authorization = '';\r\n  },\r\n};\r\n\r\nconst addTask = (sprintId, task) => async (dispatch, getState) => {\r\n  dispatch(addTaskRequest());\r\n  const {\r\n    auth: { token: accessToken },\r\n  } = getState();\r\n  token.set(accessToken);\r\n  try {\r\n    const { data } = await axios.post(`/task/${sprintId}`, task);\r\n    const id = data.id;\r\n    delete data.id;\r\n    dispatch(addTaskSuccess({ ...data, _id: id }));\r\n  } catch (error) {\r\n    dispatch(addTaskError(error.message));\r\n    refreshTemplate(() => addTask(sprintId, task), error, dispatch);\r\n  }\r\n};\r\n\r\nconst getTask = sprintId => async (dispatch, getState) => {\r\n  dispatch(getTaskRequest());\r\n  const {\r\n    auth: { token: accessToken },\r\n  } = getState();\r\n  token.set(accessToken);\r\n  try {\r\n    const { data } = await axios.get(`/task/${sprintId}`);\r\n    dispatch(getTaskSuccess(data));\r\n  } catch (error) {\r\n    dispatch(getTaskError(error.message));\r\n    refreshTemplate(() => getTask(sprintId), error, dispatch);\r\n  }\r\n};\r\n\r\nconst deleteTask = id => async dispatch => {\r\n  dispatch(deleteTaskRequest());\r\n  try {\r\n    await axios.delete(`/task/${id}`);\r\n    dispatch(deleteTaskSuccess(id));\r\n  } catch (error) {\r\n    dispatch(deleteTaskError(error.message));\r\n    refreshTemplate(() => deleteTask(id), error, dispatch);\r\n  }\r\n};\r\n\r\nconst addHoursWasted = (taskId, hoursWasted, currentDay) => async dispatch => {\r\n  dispatch(addHoursWastedRequest());\r\n\r\n  try {\r\n    const { data } = await axios.patch(`/task/${taskId}`, {\r\n      date: currentDay,\r\n      hours: hoursWasted,\r\n    });\r\n    dispatch(\r\n      addHoursWastedSuccess({\r\n        currentDay: data.day.currentDay,\r\n        singleHoursWasted: data.day.singleHoursWasted,\r\n        hoursWasted: data.newWastedHours,\r\n        taskId,\r\n      }),\r\n    );\r\n  } catch (error) {\r\n    dispatch(addHoursWastedError(error));\r\n  }\r\n};\r\n\r\nexport { addTask, getTask, deleteTask, addHoursWasted };\r\n","import React, { useCallback } from 'react';\r\nimport { Form, Formik } from 'formik';\r\nimport taskSchema from './taskSchema';\r\nimport FormControl from '../formControl/FormControl';\r\nimport styles from '../ProjectForm/ProjectForm.module.css';\r\nimport { useDispatch } from 'react-redux';\r\nimport { useParams } from 'react-router';\r\nimport { addTask } from 'redux/tasks/task-operation';\r\n\r\nconst SprintForm = ({ onClose }) => {\r\n  const dispatch = useDispatch();\r\n  const { sprintId } = useParams();\r\n\r\n  const onAddTask = useCallback(\r\n    values => {\r\n      dispatch(addTask(sprintId, values));\r\n      onClose();\r\n    },\r\n    [dispatch, sprintId, onClose],\r\n  );\r\n\r\n  return (\r\n    <Formik\r\n      initialValues={{\r\n        title: '',\r\n        hoursPlanned: '',\r\n      }}\r\n      validationSchema={taskSchema}\r\n      onSubmit={onAddTask}\r\n    >\r\n      <Form>\r\n        <FormControl\r\n          label=\"Назва задачі\"\r\n          name=\"title\"\r\n          type=\"title\"\r\n          id=\"title\"\r\n          placeholder=\"Назва задачі\"\r\n        />\r\n        <FormControl\r\n          label=\"Заплановано годин\"\r\n          name=\"hoursPlanned\"\r\n          type=\"number\"\r\n          id=\"hoursPlanned\"\r\n          placeholder=\"Заплановано годин\"\r\n        />\r\n        <div className={styles.btnThumb}>\r\n          <button type=\"submit\" className={styles.acceptBtn}>\r\n            Готово\r\n          </button>\r\n        </div>\r\n      </Form>\r\n    </Formik>\r\n  );\r\n};\r\n\r\nexport default SprintForm;\r\n","export default __webpack_public_path__ + \"static/media/addBtn.3ce584ae.png\";","export default __webpack_public_path__ + \"static/media/analytics.ea4391da.png\";","export default __webpack_public_path__ + \"static/media/sprintBox.4d29b0ae.png\";","import React, { useState, useEffect } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { addHoursWasted, deleteTask } from 'redux/tasks/task-operation';\r\nimport sprite from '../../icons/symbol-defs.svg';\r\nimport styles from './TasksPageItem.module.css';\r\n\r\nexport default function TaskPageItem(task) {\r\n  const dispatch = useDispatch();\r\n  const [input, setInput] = useState(0);\r\n  useEffect(() => {\r\n    setInput(\r\n      task.hoursWastedPerDay.find(item => {\r\n        return (\r\n          new Date(item.currentDay).getDate() ===\r\n          new Date(task.currentDay).getDate()\r\n        );\r\n      })?.singleHoursWasted,\r\n    );\r\n  }, [task]);\r\n\r\n  const onHandleChange = e => {\r\n    const hours = Number(e.target.value);\r\n    if (hours > 8 || hours < 0) return;\r\n    const date = new Date(Number(e.target.dataset.date));\r\n    const currentDay = `${date.getFullYear()}-${(date.getMonth() + 1)\r\n      .toString()\r\n      .padStart(2, '0')}-${date.getDate().toString().padStart(2, '0')}`;\r\n    const id = e.target.id;\r\n    if (hours) {\r\n      setInput(hours);\r\n    }\r\n\r\n    dispatch(addHoursWasted(id, hours, currentDay));\r\n  };\r\n\r\n  return (\r\n    <li className={styles.tasksListItem} key={task._id}>\r\n      <h5 className={styles.taskTitle}>{task.title}</h5>\r\n      <div className={styles.planned}>\r\n        <p className={styles.plannedTitle}>Заплановано годин </p>\r\n        <p className={styles.plannedHours}>{task.hoursPlanned}</p>\r\n      </div>\r\n      <div className={styles.used}>\r\n        <p className={styles.usedTitle}>Витрачено год/день </p>\r\n        {task.isDisabled ? (\r\n          <p className={styles.hoursWastedInput}>\r\n            <span className={styles.zero}> 0 </span>\r\n          </p>\r\n        ) : (\r\n          <input\r\n            className={styles.hoursWastedInput}\r\n            type=\"number\"\r\n            value={input}\r\n            onChange={onHandleChange}\r\n            data-date={task.currentDay}\r\n            id={task._id}\r\n            // disabled={task.isDisabled}\r\n          />\r\n        )}\r\n      </div>\r\n      <div className={styles.total}>\r\n        <p className={styles.totalTitle}>Витрачено годин (загал.)</p>\r\n        <p className={styles.totalHours}>{task.hoursWasted}</p>\r\n      </div>\r\n      <div className={styles.btnCont}>\r\n        <button\r\n          data-id={task._id}\r\n          type=\"button\"\r\n          className={styles.btnDelete}\r\n          onClick={() => dispatch(deleteTask(task._id))}\r\n        >\r\n          <svg className={styles.btnDeleteIcon}>\r\n            <use href={sprite + '#icon-delete'} />\r\n          </svg>\r\n        </button>\r\n      </div>\r\n    </li>\r\n  );\r\n}\r\n","import { createSelector } from '@reduxjs/toolkit';\r\n\r\nconst getToken = state => state;\r\nconst getTasksHoursWasted = state => state.tasks;\r\nconst tasksSelector = state => state.tasks.tasksItems;\r\nconst tasksErrorSelector = state => state.tasks.tasksError;\r\nconst tasksLoadingSelector = state => state.tasks.tasksLoading;\r\nconst getNowDay = state => state.tasks.currentDay;\r\nconst getTasks = state => state;\r\n\r\nexport const sprintDurationSelector = (state) =>\r\n  tasksSelector(state)[0].hoursWastedPerDay.length;\r\n\r\n export const hoursPlannedSelector = createSelector([tasksSelector], (items) =>\r\n  items\r\n    .map((task) => Number(task.hoursPlanned))\r\n    .reduce((acc, taskValue) => {\r\n      return (acc += taskValue);\r\n    }, 0)\r\n);\r\n\r\nexport const sumHoursWastedSelector = createSelector([tasksSelector], (items) =>\r\n  items\r\n    .map((task) => Number(task.hoursWasted))\r\n    .reduce((acc, taskValue) => {\r\n      return (acc += taskValue);\r\n    }, 0)\r\n);\r\n\r\nexport const chartDaysSelector = createSelector([tasksSelector], (items) =>\r\n  items[0].hoursWastedPerDay.map((task) => task.currentDay)\r\n);\r\n\r\nconst sprintsSelector = (state) => state.sprints;\r\nconst itemsSprintsSelector = (state) => sprintsSelector(state).sprintsItems;\r\nexport const titleSprintsSelector = (state) => itemsSprintsSelector(state)[0].title;\r\n\r\nexport const findCurrentSprint = createSelector(\r\n  [(state, params) => params, itemsSprintsSelector],\r\n  (params, sprints) => sprints.find((el) => el._id === params.sprintId)\r\n);\r\n\r\nexport {\r\n  getToken,\r\n  tasksSelector,\r\n  tasksErrorSelector,\r\n  tasksLoadingSelector,\r\n  getTasksHoursWasted,\r\n  getNowDay,\r\n  getTasks,\r\n};\r\n","import moment from \"moment\";\r\nimport \"moment/locale/uk\";\r\n\r\n\r\nexport const formatDateChanger = (chartDays) => {\r\n  const newFormatDayMounth = formatDate(chartDays);\r\n  newFormatDayMounth.unshift(\"Планування\");\r\n  return newFormatDayMounth;\r\n};\r\n\r\nconst formatDate = (chartDays) =>\r\n  chartDays.map((data) => convertFormToUppercase(data));\r\n\r\nexport const convertFormToUppercase = (date) => {\r\n  const newFormatDayMounth = moment(returnDayFormat(date))\r\n    .locale(\"uk\")\r\n    .format(\"DD MMMM\");\r\n  const result = newFormatDayMounth.split(\"\");\r\n  const firstLetterToUppercase = result[3].toUpperCase();\r\n  result.splice(3, 1, firstLetterToUppercase);\r\n  return result.join(\"\");\r\n};\r\n\r\nconst returnDayFormat = (data) => {\r\n  const res = data.split(\".\");\r\n  const [mounth, day] = res;\r\n  res[0] = day;\r\n  res[1] = mounth;\r\n  return res.join(\".\");\r\n};\r\n\r\nexport const getRedLineArr = (hoursPlanned, sprintDuration) => {\r\n  const result = [hoursPlanned];\r\n  const sprintHoursPerDay = hoursPlanned / sprintDuration;\r\n  let remainingHours = hoursPlanned;\r\n\r\n  for (let i = 0; i < sprintDuration; i += 1) {\r\n    result.push((remainingHours - sprintHoursPerDay).toFixed(2));\r\n    remainingHours -= sprintHoursPerDay;\r\n  }\r\n  return result;\r\n};\r\n\r\nexport const getBlueLineArr = (hoursPlanned, sprintDuration, itemsArr) => {\r\n  const arrOftotalHoursPerDay = getSumArrOfHoursPerSingleDay(\r\n    sprintDuration,\r\n    itemsArr\r\n  );\r\n  const result = [hoursPlanned];\r\n  let remainingHours = hoursPlanned;\r\n\r\n  for (let hoursPersingleDay of arrOftotalHoursPerDay) {\r\n    result.push((remainingHours - hoursPersingleDay).toFixed(2));\r\n    remainingHours -= hoursPersingleDay;\r\n  }\r\n  return result;\r\n};\r\n\r\nexport const getSumArrOfHoursPerSingleDay = (sprintDuration, itemsArr) => {\r\n  const result = [];\r\n  for (let i = 0; i < sprintDuration; i += 1) {\r\n    let total = 0;\r\n    for (let item of itemsArr) {\r\n      total += singleHoursWasted(item, i);\r\n    }\r\n    result.push(total);\r\n  }\r\n  return result;\r\n};\r\n\r\nconst corrHoursArrChecker = (item) => {\r\n  const itemHoursPlanned = item.hoursPlanned;\r\n  const itemHoursWasted = item.hoursWasted;\r\n  let correctArrHoursWastedPerDay = null;\r\n  if (itemHoursPlanned >= itemHoursWasted) {\r\n    correctArrHoursWastedPerDay = item.hoursWastedPerDay;\r\n  } else {\r\n    correctArrHoursWastedPerDay = item.hoursWastedPerDay.map((el) => ({\r\n      ...el,\r\n      singleHoursWasted:\r\n        (itemHoursPlanned / itemHoursWasted) * el.singleHoursWasted,\r\n    }));\r\n  }\r\n  return correctArrHoursWastedPerDay;\r\n};\r\n\r\nconst singleHoursWasted = (item, i) =>\r\n  Number(corrHoursArrChecker(item)[i].singleHoursWasted);","import React, { useEffect, useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Line } from 'react-chartjs-2';\r\nimport {\r\n  chartDaysSelector,\r\n  hoursPlannedSelector,\r\n  sprintDurationSelector,\r\n  tasksSelector,\r\n  findCurrentSprint,\r\n} from '../../redux/tasks/task-selectors';\r\nimport { formatDateChanger, getBlueLineArr, getRedLineArr } from './data';\r\nimport styles from './analytics.module.css';\r\n\r\nconst Chart = ({\r\n  hoursPlanned,\r\n  sprintDuration,\r\n  chartDays,\r\n  itemsArr,\r\n  sprint,\r\n}) => {\r\n  const [chartData, setChartData] = useState({});\r\n\r\n\r\n  const chart = () => {\r\n    setChartData({\r\n      labels: formatDateChanger(chartDays),\r\n      datasets: [\r\n        {\r\n          label: 'Запланований залишок трудовитрат',\r\n          fill: false,\r\n          lineTension: 0,\r\n          borderColor: 'rgb(255, 0, 0)',\r\n          backgroundColor: 'rgb(255, 0, 0)',\r\n          data: getRedLineArr(hoursPlanned, sprintDuration),\r\n        },\r\n        {\r\n          label: 'Актуальний залишок трудовитрат у годинах',\r\n          fill: false,\r\n          lineTension: 0.3,\r\n          borderColor: 'rgb(0, 89, 255)',\r\n          backgroundColor: 'rgb(0, 89, 255)',\r\n          data: getBlueLineArr(hoursPlanned, sprintDuration, itemsArr),\r\n        },\r\n      ],\r\n    });\r\n  };\r\n\r\n  const chartOptions = {\r\n    layout: {\r\n      padding: {\r\n        left: 0,\r\n        right: 10,\r\n        top: 20,\r\n        bottom: 10,\r\n      },\r\n    },\r\n    responsive: true,\r\n    title: {\r\n      display: true,\r\n      text: sprint.title,\r\n      fontColor: '#181C27',\r\n      fontFamily: \"'Montserrat', 'sans-serif'\",\r\n      fontSize: 20,\r\n      padding: 0,\r\n    },\r\n    elements: {\r\n      line: {\r\n        borderWidth: 2,\r\n      },\r\n      point: {\r\n        pointStyle: 'circle',\r\n        borderWidth: 2,\r\n        hoverRadius: 5,\r\n        hoverBackgroundColor: 'rgba(255, 255, 255, 0.2)',\r\n        hoverBorderWidth: 2,\r\n        radius: 2,\r\n        hitRadius: 10,\r\n      },\r\n    },\r\n    tooltips: {\r\n      mode: 'index',\r\n      titleFontSize: 14,\r\n      titleMarginBottom: 10,\r\n      bodyFontFamily: \"'Montserrat', 'sans-serif'\",\r\n      bodyFontSize: 14,\r\n      bodySpacing: 5,\r\n      bodyAlign: 'center',\r\n      xPadding: 8,\r\n      yPadding: 8,\r\n      caretPadding: 5,\r\n      caretSize: 10,\r\n      cornerRadius: 5,\r\n      callbacks: {\r\n        label: tooltipItem => {\r\n          let label = tooltipItem.value;\r\n          label = '  ' + label;\r\n          return label;\r\n        },\r\n      },\r\n    },\r\n    scales: {\r\n      yAxes: [\r\n        {\r\n          scaleLabel: {\r\n            display: true,\r\n            labelString: 'Людино-години',\r\n            fontFamily: \"'Montserrat', 'sans-serif'\",\r\n            fontSize: 14,\r\n            fontColor: '#181C27',\r\n          },\r\n          ticks: {\r\n            beginAtZero: true,\r\n            fontSize: 14,\r\n            fontColor: '#181C27',\r\n          },\r\n          gridLines: {\r\n            display: true,\r\n          },\r\n        },\r\n      ],\r\n      xAxes: [\r\n        {\r\n          gridLines: {\r\n            display: false,\r\n          },\r\n          ticks: {\r\n            beginAtZero: false,\r\n            fontSize: 14,\r\n            fontColor: '#181C27',\r\n          },\r\n        },\r\n      ],\r\n    },\r\n    legend: {\r\n      display: true,\r\n      fullWidth: false,\r\n      labels: {\r\n        fontColor: '#181C27',\r\n        fontFamily: \"'Montserrat', 'sans-serif'\",\r\n        fontSize: 14,\r\n        boxWidth: 5,\r\n        usePointStyle: true,\r\n        padding: 20,\r\n      },\r\n    },\r\n  };\r\n\r\n  useEffect(() => chart(), []);\r\n\r\n  return (\r\n    <div className={styles.graphicWrapper}>\r\n      <Line options={chartOptions} data={chartData} />\r\n    </div>\r\n  );\r\n};\r\nconst mapStateToProps = (state, ownProps) => ({\r\n  hoursPlanned: hoursPlannedSelector(state),\r\n  sprintDuration: sprintDurationSelector(state),\r\n  chartDays: chartDaysSelector(state),\r\n  itemsArr: tasksSelector(state),\r\n  sprint: findCurrentSprint(state, ownProps.params),\r\n});\r\n\r\nexport default connect(mapStateToProps)(Chart);\r\n","import React, { Component, useEffect, useState } from 'react';\r\nimport Chart from '../Chart/Chart';\r\nimport styles from './ChartModal.module.css';\r\nimport { useParams } from 'react-router';\r\n\r\n\r\nconst Modal = ({onClose}) => {\r\n\r\n  const params = useParams();\r\n  \r\n  useEffect(() => {\r\n    window.addEventListener('keydown', handleKeyDown);\r\n    return () => {\r\n      window.removeEventListener('keydown', handleKeyDown);\r\n    }\r\n  })\r\n\r\n  const handleKeyDown = e => {\r\n    if (e.code === 'Escape') {\r\n      console.log(e.code);\r\n      onClose();\r\n      changeScrollStyle();\r\n    }\r\n  };\r\n  const handleBackDrop = e => {\r\n    if (e.currentTarget === e.target) {\r\n      onClose();\r\n      changeScrollStyle();\r\n    }\r\n  };\r\n  const handleClickOnCloseBtn = e => {\r\n    e.target.nodeName === 'BUTTON' && onClose();\r\n    changeScrollStyle();\r\n  };\r\n  const changeScrollStyle = () => {\r\n    document.querySelector('body').style.overflow = 'unset';\r\n  };\r\n  return (\r\n    <div className={styles.overlay} onClick={handleBackDrop}>\r\n      <div className={styles.modal}>\r\n        <Chart params={ params }/>\r\n        <button\r\n          type=\"button\"\r\n          className={styles.closeGraphicBtn}\r\n          onClick={handleClickOnCloseBtn}\r\n        ></button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nexport default Modal;\r\n\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { NavLink, useParams } from 'react-router-dom';\r\nimport TemporaryModal from '../../components/TemporaryModal/TemporaryModal';\r\nimport TaskForm from '../../components/TaskForm/TaskForm';\r\nimport { getSprint } from '../../redux/sprints/sprint-operation';\r\nimport sprite from '../../icons/symbol-defs.svg';\r\nimport addBtn from '../../icons/Buttons/addBtn.png';\r\nimport analytics from '../../icons/Buttons/analytics.png';\r\nimport sprintBox from '../../icons/Buttons/sprintBox.png';\r\nimport styles from './TasksPage.module.css';\r\nimport TaskPageItem from 'pages/TasksPageItem/TasksPageItem';\r\nimport { getTask } from 'redux/tasks/task-operation';\r\nimport { tasksSelector } from 'redux/tasks/task-selectors';\r\nimport SprintForm from '../../components/SprintForm/SprintForm';\r\nimport { getProject } from 'redux/projects/project-operations';\r\nimport {\r\n  getSprints,\r\n  sprintsLoadingSelector,\r\n} from 'redux/sprints/sprint-selectors';\r\nimport { projectsSelector } from 'redux/projects/project-selectors';\r\nimport ChartModal from '../../components/ChartModal/ChartModal';\r\nimport { CSSTransition } from 'react-transition-group';\r\nimport alert from './alert.module.css';\r\nimport { patchTitle } from 'redux/sprints/sprint-operation';\r\n\r\nimport Loader from '../../shared/Loader/Loader';\r\nimport { tasksLoadingSelector } from '../../redux/tasks/task-selectors';\r\n\r\nexport default function TasksPage() {\r\n  const dispatch = useDispatch();\r\n  const [modalOpen, setModalOpen] = useState(false);\r\n  const [diagramModal, setDiagramModal] = useState(false);\r\n  const { sprintId } = useParams();\r\n  const [modalAddSprint, setModalAddSprint] = useState(false);\r\n  const sprints = useSelector(getSprints);\r\n  const sprint = sprints.find(item => item._id === sprintId);\r\n  const { projectId } = useParams();\r\n  const projects = useSelector(projectsSelector);\r\n  const project = projects.find(item => item._id === projectId);\r\n  const tasksLoading = useSelector(tasksLoadingSelector);\r\n  const sprintsLoading = useSelector(sprintsLoadingSelector);\r\n\r\n  const [isUpdate, setUpdate] = useState(true);\r\n  const [input, setInput] = useState();\r\n  const [active, setActive] = useState(false);\r\n\r\n  const tasks = useSelector(tasksSelector);\r\n  const startDate = sprints.find(item => item._id === sprintId)?.startDate;\r\n  const duration = sprints.find(item => item._id === sprintId)?.duration;\r\n  const endDate = sprints.find(item => item._id === sprintId)?.endDate;\r\n  const [value, setValue] = useState('');\r\n  const _MS_PER_DAY = 1000 * 60 * 60 * 24;\r\n\r\n  const curDay = useSelector(state => state.tasks.currentDay);\r\n  const [currentDay, setCurrentDay] = useState(Date.now());\r\n  const [sprintDay, setSprintDay] = useState(0);\r\n\r\n  const filtredTask = tasks.filter(task =>\r\n    task.title.includes(value.toLowerCase()),\r\n  );\r\n\r\n  const onFilter = event => {\r\n    return setValue(event.target.value);\r\n  };\r\n\r\n  const onDecrement = () => {\r\n    if (new Date(startDate).getDate() !== new Date(currentDay).getDate()) {\r\n      setCurrentDay(prev => prev - _MS_PER_DAY);\r\n      setSprintDay(prev => prev - 1);\r\n    }\r\n  };\r\n\r\n  const onIncrement = () => {\r\n    if (new Date(endDate).getDate() !== new Date(currentDay).getDate()) {\r\n      setCurrentDay(prev => prev + _MS_PER_DAY);\r\n      setSprintDay(prev => prev + 1);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    dispatch(getTask(sprintId));\r\n    dispatch(getProject());\r\n    dispatch(getSprint(projectId));\r\n  }, [dispatch, sprintId, projectId]);\r\n\r\n  const onOpenModal = () => {\r\n    setModalOpen(true);\r\n    document.body.style.overflow = 'hidden';\r\n  };\r\n  const onCloseModal = () => {\r\n    setModalOpen(false);\r\n    document.body.style.overflow = '';\r\n  };\r\n\r\n  const onOpenModalSprint = () => {\r\n    setModalAddSprint(true);\r\n    document.body.style.overflow = 'hidden';\r\n  };\r\n  const onCloseModalSprint = () => {\r\n    setModalAddSprint(false);\r\n    document.body.style.overflow = '';\r\n  };\r\n\r\n  const onChangeTitle = e => {\r\n    setUpdate(!isUpdate);\r\n    setInput(sprint.title);\r\n  };\r\n  const onHandleChange = e => {\r\n    setInput(e.target.value);\r\n  };\r\n  const onFormSubmit = e => {\r\n    e.preventDefault();\r\n    dispatch(patchTitle(sprintId, input));\r\n    setUpdate(!isUpdate);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const result = (Date.now() - Date.parse(startDate)) / _MS_PER_DAY;\r\n    setSprintDay(Math.floor(result + 1));\r\n  }, [startDate, _MS_PER_DAY]);\r\n\r\n  useEffect(() => {\r\n    setCurrentDay(curDay);\r\n  }, [curDay, sprintId]);\r\n\r\n  console.log(Date.parse(startDate));\r\n  console.log(currentDay);\r\n\r\n  return (\r\n    <>\r\n      <div className={styles.tasksContainer}>\r\n        <div className={styles.sprintsSideBar}>\r\n          <div className={styles.showSprints}>\r\n            <NavLink\r\n              to={`/projects/${project?._id}`}\r\n              className={styles.sprintsLink}\r\n              activeClassName={styles.sprintLinkActive}\r\n            >\r\n              <svg className={styles.sprintsBackArrow}>\r\n                <use href={sprite + '#arrow-left'} />\r\n              </svg>\r\n              <div className={styles.sprintsBack}>\r\n                <p className={styles.sprintsBackText}>Показати спринти</p>\r\n              </div>\r\n            </NavLink>\r\n          </div>\r\n          <div className={styles.sprintsListSection}>\r\n            <ul className={styles.sprintsList}>\r\n              {sprints.map(sprint => (\r\n                <li className={styles.sprintListItem} key={sprint._id}>\r\n                  <NavLink\r\n                    to={`/projects/${project._id}/sprints/${sprint._id}`}\r\n                    className={styles.sprintsLink}\r\n                    activeClassName={styles.sprintLinkActive}\r\n                  >\r\n                    <img src={sprintBox} alt=\"\" className={styles.sprintBox} />\r\n                    <span className={styles.sprintTitle}>{sprint.title}</span>\r\n                  </NavLink>\r\n                </li>\r\n              ))}\r\n            </ul>\r\n            <div className={styles.addSprint}>\r\n              <button\r\n                type=\"button\"\r\n                className={styles.btnAddSprint}\r\n                onClick={onOpenModalSprint}\r\n              >\r\n                <img src={addBtn} alt=\"\" className={styles.btnAddSprintIcon} />\r\n              </button>\r\n              <p className={styles.addSprintText}>Створити спринт</p>\r\n            </div>\r\n            <TemporaryModal\r\n              onClose={onCloseModalSprint}\r\n              onOpen={modalAddSprint}\r\n              title=\"Створення проекту\"\r\n            >\r\n              <SprintForm onClose={onCloseModalSprint} />\r\n            </TemporaryModal>\r\n          </div>\r\n        </div>\r\n        <div className={styles.container}>\r\n          <div className={styles.navigation}>\r\n            <div className={styles.datePicker}>\r\n              {!!sprintDay &&\r\n                !!duration &&\r\n                Date.parse(startDate) <= new Date(currentDay) && (\r\n                  <div className={styles.navDay}>\r\n                    <button\r\n                      type=\"button\"\r\n                      className={styles.navLeft}\r\n                      onClick={onDecrement}\r\n                      disabled={\r\n                        new Date(startDate).getDate() ===\r\n                        new Date(currentDay).getDate()\r\n                      }\r\n                    >\r\n                      &#5176;\r\n                    </button>\r\n                    <p className={styles.navCurrentDay}> {sprintDay} </p>\r\n                    <span> / </span>\r\n                    <p className={styles.navTotalDays}>{duration} </p>\r\n                    <button\r\n                      type=\"button\"\r\n                      className={styles.navRight}\r\n                      onClick={onIncrement}\r\n                      disabled={\r\n                        new Date(endDate).getDate() ===\r\n                        new Date(currentDay).getDate()\r\n                      }\r\n                    >\r\n                      &#5171;\r\n                    </button>\r\n                  </div>\r\n                )}\r\n              <p className={styles.navDate}>\r\n                {new Date(currentDay)\r\n                  .toJSON()\r\n                  .slice(0, 10)\r\n                  .split('-')\r\n                  .reverse()\r\n                  .join('.')}\r\n              </p>\r\n            </div>\r\n            <div className={styles.search}>\r\n              <input\r\n                name=\"filter\"\r\n                type=\"text\"\r\n                autoComplete=\"off\"\r\n                placeholder=\"пошук...\"\r\n                className={styles.searchInput}\r\n                onChange={onFilter}\r\n              />\r\n              <svg className={styles.searchMagnify}>\r\n                <use href={sprite + '#magnify-glass'} />\r\n              </svg>\r\n            </div>\r\n          </div>\r\n          <div className={styles.tasks}>\r\n            <div className={styles.tasksTitle}>\r\n              <CSSTransition\r\n                in={active}\r\n                unmountOnExit\r\n                mountOnEnter\r\n                timeout={200}\r\n                classNames={alert}\r\n              >\r\n                <form onSubmit={onFormSubmit} className={styles.changeForm}>\r\n                  <input\r\n                    type=\"text\"\r\n                    name=\"edit\"\r\n                    autoComplete=\"off\"\r\n                    value={input}\r\n                    onChange={onHandleChange}\r\n                    className={styles.changeFormInput}\r\n                  />\r\n                  <button\r\n                    type=\"submit\"\r\n                    className={styles.saveButtonIcon}\r\n                  ></button>\r\n                </form>\r\n              </CSSTransition>\r\n              <CSSTransition\r\n                classNames={alert}\r\n                in={isUpdate}\r\n                timeout={200}\r\n                unmountOnExit\r\n                mountOnEnter\r\n                onExited={() => setActive(true)}\r\n                onEnter={() => setActive(false)}\r\n              >\r\n                <>\r\n                  <p className={styles.tasksTitleText}>{sprint?.title}</p>\r\n                  <button\r\n                    type=\"button\"\r\n                    className={styles.tasksTitleEdit}\r\n                    onClick={onChangeTitle}\r\n                  >\r\n                    <svg className={styles.btnEdit}>\r\n                      <use href={sprite + '#icon-edit'} />\r\n                    </svg>\r\n                  </button>\r\n                </>\r\n              </CSSTransition>\r\n            </div>\r\n            <div className={styles.tasksHeader}>\r\n              <p className={styles.tasksHeaderTitle}>Задача </p>\r\n              <p className={styles.tasksHeaderPlanned}>Заплановано годин</p>\r\n              <p className={styles.tasksHeaderUsed}>Використано год/день </p>\r\n              <p className={styles.tasksHeaderTotal}>\r\n                Використано годин (загал.)\r\n              </p>\r\n            </div>\r\n            {!tasks.length && !tasksLoading ? (\r\n              <h2 className={styles.tasksNone}>\r\n                У спринті відсутні задачі, скористайтеся кнопкою \"Створити\r\n                задачу\"\r\n              </h2>\r\n            ) : (\r\n              <ul className={styles.tasksList}>\r\n                {tasksLoading || sprintsLoading ? (\r\n                  <Loader />\r\n                ) : (\r\n                  filtredTask.length &&\r\n                  filtredTask.map(task => (\r\n                    <TaskPageItem\r\n                      {...task}\r\n                      key={task._id}\r\n                      currentDay={currentDay}\r\n                      isDisabled={\r\n                        new Date(startDate).getDate() >\r\n                        new Date(currentDay).getDate()\r\n                      }\r\n                    />\r\n                  ))\r\n                )}\r\n              </ul>\r\n            )}\r\n            <div className={styles.addTaskSection}>\r\n              <button\r\n                type=\"button\"\r\n                className={styles.btnAdd}\r\n                onClick={onOpenModal}\r\n              >\r\n                <img src={addBtn} alt=\"\" className={styles.btnAddIcon} />\r\n              </button>\r\n              <p className={styles.addProjectText}>Створити задачу</p>\r\n            </div>\r\n            <TemporaryModal\r\n              onClose={onCloseModal}\r\n              onOpen={modalOpen}\r\n              title=\"Створення задачi\"\r\n            >\r\n              <TaskForm onClose={onCloseModal} />\r\n            </TemporaryModal>\r\n            <div className={styles.showGraphSection}>\r\n              {tasks.length > 2 && (\r\n                <button\r\n                  type=\"button\"\r\n                  onClick={() => setDiagramModal(true)}\r\n                  className={styles.btnGraph}\r\n                >\r\n                  <img src={analytics} alt=\"\" className={styles.btnGraphIcon} />\r\n                </button>\r\n              )}\r\n              {diagramModal && (\r\n                <ChartModal onClose={() => setDiagramModal(false)} />\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import axios from 'axios';\r\nimport { refreshTemplate } from 'redux/refreshToken/refreshTemplate';\r\n\r\nimport {\r\n  addProjectRequest,\r\n  addProjectSuccess,\r\n  addProjectError,\r\n  addContributorRequest,\r\n  addContributorSuccess,\r\n  addContributorError,\r\n  getProjectRequest,\r\n  getProjectSuccess,\r\n  getProjectError,\r\n  deleteProjectRequest,\r\n  deleteProjectSuccess,\r\n  deleteProjectError,\r\n  changeProjectTitleRequest,\r\n  changeProjectTitleSuccess,\r\n  changeProjectTitleError,\r\n} from './project-actions';\r\n\r\n// ======= post project=======\r\n\r\nconst token = {\r\n  set(token) {\r\n    axios.defaults.headers.common.Authorization = `Bearer ${token}`;\r\n  },\r\n  unset() {\r\n    axios.defaults.headers.common.Authorization = '';\r\n  },\r\n};\r\n\r\nconst addProject = project => async dispatch => {\r\n  dispatch(addProjectRequest());\r\n\r\n  try {\r\n    const { data } = await axios.post('/project', project);\r\n    const id = data.id;\r\n    delete data.id;\r\n    dispatch(addProjectSuccess({ ...data, _id: id }));\r\n  } catch (error) {\r\n    dispatch(addProjectError(error.message));\r\n    refreshTemplate(() => addProject(project), error, dispatch);\r\n  }\r\n};\r\n\r\n// =========get projects========\r\n//     /project\r\nconst getProject = () => async (dispatch, getState) => {\r\n  const {\r\n    auth: { token: accessToken },\r\n  } = getState();\r\n  token.set(accessToken);\r\n  dispatch(getProjectRequest());\r\n\r\n  try {\r\n    const { data } = await axios.get('/project');\r\n    dispatch(getProjectSuccess(data));\r\n  } catch (error) {\r\n    dispatch(getProjectError(error.message));\r\n    refreshTemplate(getProject, error, dispatch);\r\n  }\r\n};\r\n\r\n// ======== post contributor=========\r\n//      /project/contributor/{projectId}\r\n\r\nconst addContributor = (projectId, contributor) => async dispatch => {\r\n  dispatch(addContributorRequest());\r\n\r\n  try {\r\n    const { data } = await axios.patch(\r\n      `/project/contributor/${projectId}`,\r\n      contributor,\r\n    );\r\n    dispatch(addContributorSuccess({ members: data.newMembers, projectId }));\r\n  } catch (error) {\r\n    dispatch(addContributorError(error.message));\r\n    refreshTemplate(\r\n      () => addContributor(projectId, contributor),\r\n      error,\r\n      dispatch,\r\n    );\r\n  }\r\n};\r\n\r\n// ========patch title==========\r\n\r\n//    /project/title/{projectId}\r\n\r\nconst patchTitle = (projectId, title) => async dispatch => {\r\n  dispatch(changeProjectTitleRequest());\r\n\r\n  try {\r\n    await axios.patch(`/project/title/${projectId}`, { title });\r\n    dispatch(changeProjectTitleSuccess({ projectId, title }));\r\n  } catch (error) {\r\n    dispatch(changeProjectTitleError(error.message));\r\n    refreshTemplate(() => patchTitle(projectId, title), error, dispatch);\r\n  }\r\n};\r\n\r\n//=========delete project==========\r\n//    /project/{projectId}\r\nconst deleteProject = id => async dispatch => {\r\n  dispatch(deleteProjectRequest());\r\n  try {\r\n    await axios.delete(`/project/${id}`);\r\n    dispatch(deleteProjectSuccess(id));\r\n  } catch (error) {\r\n    dispatch(deleteProjectError(error.message));\r\n    refreshTemplate(() => deleteProject(id), error, dispatch);\r\n  }\r\n};\r\n\r\nexport { addProject, getProject, addContributor, patchTitle, deleteProject };\r\n","export default __webpack_public_path__ + \"static/media/symbol-defs.b8a53153.svg\";"],"sourceRoot":""}